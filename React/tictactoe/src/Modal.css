.modal-background {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1000;
    /* As dialog fades in, darken the background behind it on the main page */
/*
    background-color: rgba(250, 250, 250, 0.85);
*/
    transition-duration: 0.3s;
    transition-property: background-color;
}

/*
 * Need the initial CSS state to begin in.
 */
.modal-dialog {
    position: fixed;
    top: 20%;
    left: 10%;
    right: 10%;
    bottom: 20%;
    text-align: center;
    background-color: rgba(250, 250, 250, 1);
    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);
    z-index: 1001;

    /* Make the dialog fade in, in place */
    transition-duration: 0.3s;
    transition-property: opacity;
    opacity: 0.2;
}
/*
 * We then need the "end state" CSS to transition into.
 * And we need to somehow apply this CSS after the first CSS is applied...
 * There are various open source React helper Components for this, but lets try it out manually first.
 */

.modal-dialog > header {
    background: #217cba;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 2rem;
    padding: 0 2rem;
    min-height: 50px;
}

.modal-dialog > header > button {
    border: none;
    padding: 0;
    font-size: 1.2rem;
    background: inherit;
    color: white;
    cursor: pointer;
}
